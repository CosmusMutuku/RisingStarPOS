# -*- coding: utf-8 -*-
"""Payment Processing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dNmE4tvaIlfVILZreYllcwN57ESS7L4n

## Payment Processing
"""

import sqlite3

# Connect to the database
conn = sqlite3.connect('C:\Users\user\rising_star_pos.db')
cursor = conn.cursor()

# Function to search for products based on product name
def search_product(product_name):
    matching_products = []
    query = "SELECT * FROM product WHERE name LIKE ?"
    cursor.execute(query, ('%' + product_name + '%',))
    rows = cursor.fetchall()
    for row in rows:
        matching_products.append(row)
    return matching_products

# Create an empty shopping cart
shopping_cart = []

# Loop for selecting and adding products
while True:
    # Prompt for the product name
    product_name = input("Enter the product name: ")

    # Search for the product in the inventory
    matching_products = search_product(product_name)

    # Check if any matching products found
    if len(matching_products) == 0:
        print("No matching products found. Please recheck the spelling.")
        continue  # Restart the loop to search again

    # Display the matching products
    print("Matching Products:")
    for i, product in enumerate(matching_products):
        print("Product ID:", product[0])
        print("Name:", product[1])
        print("Selling Price:", product[4])
        print("Quantity:", product[6])
        print("------------------------")

    # Prompt for selecting a product
    selected_product_id = input("Enter the product ID to select: ")

    # Retrieve the selected product from the inventory
    selected_product = None
    for product in matching_products:
        if str(product[0]) == selected_product_id:
            selected_product = product
            break

    # Check if the selected product exists
    if selected_product:
        print("Selected Product:")
        print("Product ID:", selected_product[0])
        print("Name:", selected_product[1])
        print("Selling Price:", selected_product[4])
        print("Quantity:", selected_product[6])
        print("------------------------")

        # Prompt for the quantity of the product
        quantity = input("Enter the quantity of the product to add to cart: ")

        # Check if the quantity input is valid
        if quantity.isdigit():
            quantity = int(quantity)
            if quantity > 0:
                # Check if the requested quantity is available
                if quantity <= selected_product[6]:
                    print(f"Added {quantity} {selected_product[1]} to the cart.")
                    # Add the selected product with the requested quantity to the shopping cart
                    shopping_cart.append({
                        'product_id': selected_product[0],
                        'product_name': selected_product[1],
                        'quantity': quantity,
                        'unit_price': selected_product[4]
                    })
                else:
                    print("Insufficient quantity. Please try again with a lower quantity.")
                    continue  # Restart the loop to select another product

                # Prompt to add another product or complete the cart
                choice = input("Do you want to add another product? (Y/N): ")
                if choice.lower() != "y":
                    break
            else:
                print("Invalid quantity. Please enter a positive value.")
        else:
            print("Invalid input. Please enter a valid quantity.")
    else:
        print("Invalid product ID. Please try again.")

# Display the shopping cart
print("Shopping Cart:")
total_price = 0
for item in shopping_cart:
    product_name = item['product_name']
    quantity = item['quantity']
    unit_price = item['unit_price']
    amount = quantity * unit_price
    total_price += amount
    print("Product:", product_name)
    print("Quantity:", quantity)
    print("Unit Price:", unit_price)
    print("Amount:", amount)
    print("------------------------")

# Prompt to display the total amount the customer needs to pay
display_total = input("Do you want to display the total amount the customer needs to pay? (Y/N): ")
if display_total.lower() == "y":
    print("Total Price:", total_price)

# Calculate change
payment_mode = input("Enter the payment mode (cash, card, or mpesa): ")
amount_received = float(input("Enter the amount received from the customer: "))

if payment_mode.lower() == "cash":
    change = amount_received - total_price
    print("Change:", change)
else:
    print("Payment mode not supported for change calculation.")

# Prompt for the attendant's name
attendant_name = input("Enter the name of the service provider (attendant): ")

# Prompt to print the receipt
print_receipt = input("Do you want to print the receipt? (Y/N): ")

if print_receipt.lower() == "y":
    print("\n")
    print("Rising Star Electronics")
    print("------------------------------")
    print("Attendant:", attendant_name)
    print("------------------------------")
    print("Product\t\tQuantity\tUnit Price\tAmount")
    print("------------------------------")
    for item in shopping_cart:
        product_name = item['product_name']
        quantity = item['quantity']
        unit_price = item['unit_price']
        amount = quantity * unit_price
        print(f"{product_name}\t\t{quantity}\t\t{unit_price}\t\t{amount}")
    print("------------------------------")
    print("Total Price:", total_price)
    print("Amount Paid:", amount_received)
    print("Change Received:", change)
    print("Payment Mode:", payment_mode)
    print("------------------------------")
    print("Thank you for shopping with us!")
    print("Visit us again for quality assured products at well-considered prices.")
    print("------------------------------")

# Close the database connection
conn.close()
